/**
 * PopupChatKit - ÂµåÂÖ•ÂºèËÅäÂ§©Êèí‰ª∂
 * ‰ΩøÁî®ÊñπÊ≥ï:
 * <script src="popup.js"></script>
 * <script>PopupChatKit.init({ apiBase: 'http://localhost:8000/api' });</script>
 */

(function(window) {
    'use strict';

    const PopupChatKit = {
        config: {
            apiBase: 'http://localhost:8000/api',
            position: 'bottom-right', // bottom-right, bottom-left, top-right, top-left
            buttonSize: 60,
            buttonColor: '#6366f1',
            maxWidth: 400,
            maxHeight: 600,
            zIndex: 9999
        },

        isOpen: false,
        currentSessionId: null,
        sessionPromise: null,
        container: null,
        button: null,
        chatWindow: null,
        selectedText: '',  // Â≠òÂÇ®ÈÄâ‰∏≠ÁöÑÊñáÊú¨

        /**
         * ÂàùÂßãÂåñÊèí‰ª∂
         */
        init: function(options) {
            // ÂêàÂπ∂ÈÖçÁΩÆ
            this.config = { ...this.config, ...options };
            
            // ÂàõÂª∫Ê†∑Âºè
            this.injectStyles();
            
            // ÂàõÂª∫ÊÇ¨ÊµÆÊåâÈíÆ
            this.createButton();
            
            // ÂàõÂª∫ËÅäÂ§©Á™óÂè£
            this.createChatWindow();
            
            // Ëá™Âä®ÂàõÂª∫‰ºöËØùÔºà‰øùÂ≠ò PromiseÔºâ
            this.sessionPromise = this.createSession();
            
            // ÁõëÂê¨ÊñáÊú¨ÈÄâ‰∏≠‰∫ã‰ª∂
            this.initTextSelection();
            
            console.log('PopupChatKit initialized');
        },

        /**
         * Ê≥®ÂÖ•Ê†∑Âºè
         */
        injectStyles: function() {
            const style = document.createElement('style');
            style.textContent = `
                .popup-chat-button {
                    position: fixed;
                    width: ${this.config.buttonSize}px;
                    height: ${this.config.buttonSize}px;
                    border-radius: 50%;
                    background: ${this.config.buttonColor};
                    color: white;
                    border: none;
                    cursor: pointer;
                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    z-index: ${this.config.zIndex};
                    transition: all 0.3s ease;
                }

                .popup-chat-button:hover {
                    transform: scale(1.1);
                    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
                }

                .popup-chat-button svg {
                    width: 28px;
                    height: 28px;
                }

                .popup-chat-window {
                    position: fixed;
                    width: ${this.config.maxWidth}px;
                    max-height: ${this.config.maxHeight}px;
                    background: white;
                    border-radius: 12px;
                    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
                    display: none;
                    flex-direction: column;
                    z-index: ${this.config.zIndex + 1};
                    overflow: hidden;
                }

                .popup-chat-window.open {
                    display: flex;
                }

                .popup-chat-header {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    padding: 16px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                }

                .popup-chat-header h3 {
                    margin: 0;
                    font-size: 16px;
                    font-weight: 600;
                }

                .popup-chat-close {
                    background: rgba(255, 255, 255, 0.2);
                    border: none;
                    color: white;
                    width: 28px;
                    height: 28px;
                    border-radius: 50%;
                    cursor: pointer;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: background 0.2s;
                }

                .popup-chat-close:hover {
                    background: rgba(255, 255, 255, 0.3);
                }

                .popup-chat-messages {
                    flex: 1;
                    overflow-y: auto;
                    padding: 16px;
                    background: #f7fafc;
                }

                .popup-chat-message {
                    margin-bottom: 12px;
                    display: flex;
                }

                .popup-chat-message.user {
                    justify-content: flex-end;
                }

                .popup-chat-message-content {
                    max-width: 80%;
                    padding: 10px 14px;
                    border-radius: 12px;
                    word-wrap: break-word;
                }

                .popup-chat-message.user .popup-chat-message-content {
                    background: #6366f1;
                    color: white;
                    border-bottom-right-radius: 4px;
                }

                .popup-chat-message.assistant .popup-chat-message-content {
                    background: white;
                    color: #1f2937;
                    border-bottom-left-radius: 4px;
                    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
                }

                .popup-chat-input-wrapper {
                    padding: 12px;
                    background: white;
                    border-top: 1px solid #e5e7eb;
                    display: flex;
                    gap: 8px;
                }

                .popup-chat-input {
                    flex: 1;
                    padding: 10px 12px;
                    border: 1px solid #d1d5db;
                    border-radius: 8px;
                    font-size: 14px;
                    outline: none;
                    resize: none;
                    font-family: inherit;
                }

                .popup-chat-input:focus {
                    border-color: #6366f1;
                }

                .popup-chat-send {
                    padding: 10px 16px;
                    background: #6366f1;
                    color: white;
                    border: none;
                    border-radius: 8px;
                    cursor: pointer;
                    font-weight: 500;
                    transition: background 0.2s;
                }

                .popup-chat-send:hover {
                    background: #4f46e5;
                }

                .popup-chat-send:disabled {
                    background: #9ca3af;
                    cursor: not-allowed;
                }

                .popup-chat-loading {
                    padding: 8px 0;
                    text-align: center;
                    color: #6b7280;
                    font-size: 13px;
                }

                /* ‰ΩçÁΩÆÊ†∑Âºè */
                .popup-chat-button.bottom-right {
                    bottom: 24px;
                    right: 24px;
                }

                .popup-chat-window.bottom-right {
                    bottom: 100px;
                    right: 24px;
                }

                .popup-chat-button.bottom-left {
                    bottom: 24px;
                    left: 24px;
                }

                .popup-chat-window.bottom-left {
                    bottom: 100px;
                    left: 24px;
                }

                .popup-chat-button.top-right {
                    top: 24px;
                    right: 24px;
                }

                .popup-chat-window.top-right {
                    top: 100px;
                    right: 24px;
                }

                .popup-chat-button.top-left {
                    top: 24px;
                    left: 24px;
                }

                .popup-chat-window.top-left {
                    top: 100px;
                    left: 24px;
                }

                /* ÂìçÂ∫îÂºè */
                @media (max-width: 480px) {
                    .popup-chat-window {
                        width: calc(100vw - 32px) !important;
                        max-height: calc(100vh - 120px) !important;
                    }
                }
            `;
            document.head.appendChild(style);
        },

        /**
         * ÂàõÂª∫ÊÇ¨ÊµÆÊåâÈíÆ
         */
        createButton: function() {
            this.button = document.createElement('button');
            this.button.className = `popup-chat-button ${this.config.position}`;
            this.button.innerHTML = `
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                </svg>
            `;
            this.button.onclick = () => this.toggle();
            document.body.appendChild(this.button);
        },

        /**
         * ÂàõÂª∫ËÅäÂ§©Á™óÂè£
         */
        createChatWindow: function() {
            this.chatWindow = document.createElement('div');
            this.chatWindow.className = `popup-chat-window ${this.config.position}`;
            this.chatWindow.innerHTML = `
                <div class="popup-chat-header">
                    <h3>ü§ñ AI Âä©Êâã</h3>
                    <button class="popup-chat-close">√ó</button>
                </div>
                <div class="popup-chat-messages" id="popupChatMessages">
                    <div class="popup-chat-message assistant">
                        <div class="popup-chat-message-content">
                            ‰Ω†Â•Ω!ÊàëÊòØAIÂä©Êâã,Êúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÂä©‰Ω†ÁöÑÂêó?üòä<br><br>
                            üí° ÊàëÂèØ‰ª•Â∏Æ‰Ω†Ôºö<br>
                            ‚Ä¢ üìÑ <b>ÊÄªÁªìÁΩëÈ°µ</b> - "ÊÄªÁªìËøô‰∏™È°µÈù¢"<br>
                            ‚Ä¢ üîç <b>ÊêúÁ¥¢ÂÜÖÂÆπ</b> - "ÊâæXXX‰ø°ÊÅØ"<br>
                            ‚Ä¢ üìù <b>Ëß£ÈáäÊñáÊú¨</b> - ÈÄâ‰∏≠ÊñáÂ≠óÂêéÁÇπÂáªÊ∞îÊ≥°<br>
                            ‚Ä¢ üìã <b>Â§çÂà∂HTML</b> - "Â§çÂà∂ÁΩëÈ°µHTML"
                        </div>
                    </div>
                </div>
                <div class="popup-chat-input-wrapper">
                    <textarea 
                        class="popup-chat-input" 
                        id="popupChatInput" 
                        placeholder="ËæìÂÖ•Ê∂àÊÅØ..."
                        rows="1"
                    ></textarea>
                    <button class="popup-chat-send" id="popupChatSend">ÂèëÈÄÅ</button>
                </div>
            `;
            
            document.body.appendChild(this.chatWindow);
            
            // ÁªëÂÆö‰∫ã‰ª∂
            this.chatWindow.querySelector('.popup-chat-close').onclick = () => this.close();
            this.chatWindow.querySelector('#popupChatSend').onclick = () => this.sendMessage();
            
            const input = this.chatWindow.querySelector('#popupChatInput');
            input.addEventListener('keydown', (e) => {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    this.sendMessage();
                }
            });
        },

        /**
         * ÂàáÊç¢ÊòæÁ§∫/ÈöêËóè
         */
        toggle: function() {
            if (this.isOpen) {
                this.close();
            } else {
                this.open();
            }
        },

        /**
         * ÊâìÂºÄËÅäÂ§©Á™óÂè£
         */
        open: function() {
            this.chatWindow.classList.add('open');
            this.isOpen = true;
            this.chatWindow.querySelector('#popupChatInput').focus();
        },

        /**
         * ÂÖ≥Èó≠ËÅäÂ§©Á™óÂè£
         */
        close: function() {
            this.chatWindow.classList.remove('open');
            this.isOpen = false;
        },

        /**
         * ÂàõÂª∫‰ºöËØù
         */
        createSession: async function() {
            try {
                const response = await fetch(`${this.config.apiBase}/sessions`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        title: 'ÂµåÂÖ•ÂºèÂØπËØù',
                        mode: 'embedded'
                    })
                });
                
                const data = await response.json();
                this.currentSessionId = data.session_id;
                console.log('‰ºöËØùÂàõÂª∫ÊàêÂäü:', this.currentSessionId);
                return this.currentSessionId;
            } catch (error) {
                console.error('ÂàõÂª∫‰ºöËØùÂ§±Ë¥•:', error);
                throw error;
            }
        },

        /**
         * Á°Æ‰øù‰ºöËØùÂ∑≤ÂàõÂª∫
         */
        ensureSession: async function() {
            if (!this.currentSessionId && this.sessionPromise) {
                await this.sessionPromise;
            }
            if (!this.currentSessionId) {
                throw new Error('‰ºöËØùÊú™ÂàõÂª∫');
            }
            return this.currentSessionId;
        },

        /**
         * Ê∑ªÂä†Ê∂àÊÅØÂà∞UI
         */
        addMessage: function(role, content) {
            const messagesContainer = document.getElementById('popupChatMessages');
            const messageDiv = document.createElement('div');
            messageDiv.className = `popup-chat-message ${role}`;
            messageDiv.innerHTML = `
                <div class="popup-chat-message-content">${this.escapeHtml(content)}</div>
            `;
            messagesContainer.appendChild(messageDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        },

        /**
         * ÊòæÁ§∫Âä†ËΩΩÁä∂ÊÄÅ
         */
        showLoading: function() {
            const messagesContainer = document.getElementById('popupChatMessages');
            const loadingDiv = document.createElement('div');
            loadingDiv.className = 'popup-chat-loading';
            loadingDiv.id = 'popupChatLoading';
            loadingDiv.textContent = 'AI Ê≠£Âú®ÊÄùËÄÉ...';
            messagesContainer.appendChild(loadingDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        },

        /**
         * ÁßªÈô§Âä†ËΩΩÁä∂ÊÄÅ
         */
        removeLoading: function() {
            const loading = document.getElementById('popupChatLoading');
            if (loading) {
                loading.remove();
            }
        },

        /**
         * ÊèêÂèñÁΩëÈ°µÂÜÖÂÆπ
         */
        extractPageContent: function() {
            // Ëé∑ÂèñÈ°µÈù¢Ê†áÈ¢ò
            const title = document.title;
            
            // Ëé∑ÂèñÈ°µÈù¢‰∏ªË¶ÅÊñáÊú¨ÂÜÖÂÆπ
            const bodyText = document.body.innerText;
            
            // ÁÆÄÂçïÊ∏ÖÁêÜÔºöÂéªÈô§Â§ö‰ΩôÁ©∫ÁôΩÂíåÁ©∫Ë°å
            const cleanText = bodyText
                .split('\n')
                .map(line => line.trim())
                .filter(line => line.length > 0)
                .join('\n');
            
            // ÈôêÂà∂ÈïøÂ∫¶ÔºàÈÅøÂÖçÂ§™ÈïøÔºâ
            const maxLength = 3000;
            const content = cleanText.length > maxLength 
                ? cleanText.substring(0, maxLength) + '...' 
                : cleanText;
            
            return {
                title: title,
                content: content,
                url: window.location.href
            };
        },

        /**
         * Ê£ÄÊµãÊòØÂê¶ÈúÄË¶ÅÊÄªÁªìÁΩëÈ°µ
         */
        shouldSummarizePage: function(message) {
            const keywords = ['ÊÄªÁªì', 'ÊëòË¶Å', 'Ê¶ÇÊã¨', 'ÂΩíÁ∫≥', 'Ëøô‰∏™ÁΩëÈ°µ', 'Ëøô‰∏™È°µÈù¢', 'ÂΩìÂâçÈ°µÈù¢', 'ÂΩìÂâçÁΩëÈ°µ', 'ÁΩëÈ°µÂÜÖÂÆπ', 'È°µÈù¢ÂÜÖÂÆπ'];
            const lowerMessage = message.toLowerCase();
            return keywords.some(keyword => lowerMessage.includes(keyword));
        },

        /**
         * Ê£ÄÊµãÊòØÂê¶ÈúÄË¶ÅÊêúÁ¥¢ÁΩëÈ°µÂÜÖÂÆπ
         */
        shouldSearchPage: function(message) {
            const keywords = ['Êâæ', 'ÊêúÁ¥¢', 'Êü•Êâæ', 'ÂØªÊâæ', 'Âú®È°µÈù¢', 'Âú®ÁΩëÈ°µ', 'È°µÈù¢Èáå', 'ÁΩëÈ°µÈáå', 'ÊúâÊ≤°Êúâ', 'Âì™ÈáåÊúâ'];
            const lowerMessage = message.toLowerCase();
            return keywords.some(keyword => lowerMessage.includes(keyword));
        },

        /**
         * Ê£ÄÊµãÊòØÂê¶ÈúÄË¶ÅËß£ÈáäÈÄâ‰∏≠ÊñáÊú¨
         */
        shouldExplainSelection: function(message) {
            const keywords = ['Ëß£Èáä', 'ËØ¥Êòé', '‰ªÄ‰πàÊÑèÊÄù', 'ÊòØ‰ªÄ‰πà', 'ËÆ≤Ëß£', 'ÁøªËØë'];
            const lowerMessage = message.toLowerCase();
            return keywords.some(keyword => lowerMessage.includes(keyword)) && this.selectedText;
        },

        /**
         * Ê£ÄÊµãÊòØÂê¶ÈúÄË¶ÅÂ§çÂà∂ÁΩëÈ°µ HTML
         */
        shouldCopyPageHTML: function(message) {
            const keywords = ['Â§çÂà∂ÁΩëÈ°µ', 'Â§çÂà∂html', 'Â§çÂà∂È°µÈù¢', 'ÂØºÂá∫html', 'Ëé∑Âèñhtml', 'ÁΩëÈ°µÊ∫êÁ†Å', 'È°µÈù¢‰ª£Á†Å'];
            const lowerMessage = message.toLowerCase();
            return keywords.some(keyword => lowerMessage.includes(keyword));
        },

        /**
         * Â§çÂà∂ÁΩëÈ°µ HTML
         */
        copyPageHTML: async function() {
            try {
                // Ëé∑ÂèñÂÆåÊï¥ÁöÑ HTML
                const html = document.documentElement.outerHTML;
                
                // Â§çÂà∂Âà∞Ââ™Ë¥¥Êùø
                await navigator.clipboard.writeText(html);
                
                // ÊòæÁ§∫ÊàêÂäüÊ∂àÊÅØ
                this.addMessage('assistant', `‚úÖ ÁΩëÈ°µ HTML Â∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥ÊùøÔºÅ

üìä ÁªüËÆ°‰ø°ÊÅØÔºö
- ÊÄªÂ≠óÁ¨¶Êï∞Ôºö${html.length.toLocaleString()}
- È°µÈù¢Ê†áÈ¢òÔºö${document.title}
- URLÔºö${window.location.href}

üí° ‰Ω†Áé∞Âú®ÂèØ‰ª•Ôºö
1. Á≤òË¥¥Âà∞ÊñáÊú¨ÁºñËæëÂô®‰∏≠
2. ‰øùÂ≠ò‰∏∫ .html Êñá‰ª∂
3. Âú®ÊµèËßàÂô®‰∏≠ÊâìÂºÄÊü•ÁúãÊïàÊûú`);
                
                return true;
            } catch (error) {
                console.error('Â§çÂà∂Â§±Ë¥•:', error);
                this.addMessage('assistant', '‚ùå Â§çÂà∂Â§±Ë¥•ÔºåËØ∑Á°Æ‰øùÊµèËßàÂô®ÊîØÊåÅÂâ™Ë¥¥Êùø APIÔºåÊàñËÄÖÊ£ÄÊü•ÊùÉÈôêËÆæÁΩÆ„ÄÇ');
                return false;
            }
        },

        /**
         * ÂàùÂßãÂåñÊñáÊú¨ÈÄâ‰∏≠ÁõëÂê¨
         */
        initTextSelection: function() {
            document.addEventListener('mouseup', () => {
                const selection = window.getSelection();
                const text = selection.toString().trim();
                
                if (text && text.length > 0 && text.length < 500) {
                    this.selectedText = text;
                    console.log('ÊñáÊú¨Â∑≤ÈÄâ‰∏≠:', text);
                    
                    // ÂèØÈÄâÔºöÊòæÁ§∫‰∏Ä‰∏™Â∞èÊèêÁ§∫Ê∞îÊ≥°
                    this.showSelectionHint();
                } else if (text.length === 0) {
                    this.selectedText = '';
                    this.hideSelectionHint();
                }
            });
        },

        /**
         * ÊòæÁ§∫ÈÄâ‰∏≠ÊñáÊú¨ÊèêÁ§∫
         */
        showSelectionHint: function() {
            // ÁßªÈô§Â∑≤Â≠òÂú®ÁöÑÊèêÁ§∫
            this.hideSelectionHint();
            
            const selection = window.getSelection();
            if (!selection.rangeCount) return;
            
            const range = selection.getRangeAt(0);
            const rect = range.getBoundingClientRect();
            
            const hint = document.createElement('div');
            hint.id = 'popupChatSelectionHint';
            hint.style.cssText = `
                position: fixed;
                left: ${rect.left + rect.width / 2}px;
                top: ${rect.top - 45}px;
                transform: translateX(-50%);
                background: ${this.config.buttonColor};
                color: white;
                padding: 8px 14px;
                border-radius: 8px;
                font-size: 13px;
                z-index: ${this.config.zIndex + 2};
                pointer-events: auto;
                opacity: 0;
                transition: opacity 0.3s, transform 0.2s;
                box-shadow: 0 4px 12px rgba(0,0,0,0.2);
                cursor: pointer;
                user-select: none;
            `;
            hint.innerHTML = 'üí° ÁÇπÂáªËß£ÈáäËøôÊÆµÊñáÂ≠ó';
            
            // ÁÇπÂáªÁõ¥Êé•Ëß£Èáä
            hint.onclick = (e) => {
                e.stopPropagation();
                this.explainSelectedText();
            };
            
            // ÊÇ¨ÂÅúÊïàÊûú
            hint.onmouseenter = () => {
                hint.style.transform = 'translateX(-50%) scale(1.05)';
            };
            hint.onmouseleave = () => {
                hint.style.transform = 'translateX(-50%) scale(1)';
            };
            
            document.body.appendChild(hint);
            
            // Ê∑°ÂÖ•ÊïàÊûú
            setTimeout(() => {
                hint.style.opacity = '1';
            }, 10);
            
            // 5ÁßíÂêéËá™Âä®Ê∂àÂ§±
            setTimeout(() => {
                this.hideSelectionHint();
            }, 5000);
        },

        /**
         * ÈöêËóèÈÄâ‰∏≠ÊñáÊú¨ÊèêÁ§∫
         */
        hideSelectionHint: function() {
            const hint = document.getElementById('popupChatSelectionHint');
            if (hint) {
                hint.style.opacity = '0';
                setTimeout(() => hint.remove(), 300);
            }
        },

        /**
         * Ëß£ÈáäÈÄâ‰∏≠ÁöÑÊñáÊú¨
         */
        explainSelectedText: async function() {
            if (!this.selectedText) return;
            
            // ÈöêËóèÊèêÁ§∫
            this.hideSelectionHint();
            
            // ÊâìÂºÄËÅäÂ§©Á™óÂè£
            if (!this.isOpen) {
                this.open();
            }
            
            // Á≠âÂæÖ‰∏Ä‰∏ãÁ°Æ‰øùÁ™óÂè£Â∑≤ÊâìÂºÄ
            await new Promise(resolve => setTimeout(resolve, 100));
            
            // Ëá™Âä®Â°´ÂÖÖÂπ∂ÂèëÈÄÅ
            const input = document.getElementById('popupChatInput');
            input.value = 'Ëß£ÈáäËøôÊÆµÊñáÂ≠ó';
            
            // Ëß¶ÂèëÂèëÈÄÅ
            this.sendMessage();
        },

        /**
         * ÂèëÈÄÅÊ∂àÊÅØ
         */
        sendMessage: async function() {
            const input = document.getElementById('popupChatInput');
            const message = input.value.trim();
            
            if (!message) return;
            
            // Á¶ÅÁî®ÂèëÈÄÅÊåâÈíÆ
            const sendBtn = document.getElementById('popupChatSend');
            sendBtn.disabled = true;
            
            try {
                // Á°Æ‰øù‰ºöËØùÂ∑≤ÂàõÂª∫
                await this.ensureSession();
                
                // ÊòæÁ§∫Áî®Êà∑Ê∂àÊÅØ
                this.addMessage('user', message);
                input.value = '';
                
                // ÂÖàÊ£ÄÊµãÊòØÂê¶ÈúÄË¶ÅÂ§çÂà∂ÁΩëÈ°µ HTMLÔºà‰∏çÈúÄË¶Å AIÔºâ
                if (this.shouldCopyPageHTML(message)) {
                    await this.copyPageHTML();
                    sendBtn.disabled = false;
                    return;
                }
                
                // ÊòæÁ§∫Âä†ËΩΩÁä∂ÊÄÅ
                this.showLoading();
                
                // Êô∫ËÉΩËØÜÂà´Áî®Êà∑ÊÑèÂõæÂπ∂ÊûÑÂª∫ÊèêÁ§∫ËØç
                let finalMessage = message;
                let systemPrompt = '';
                
                // 1. Ê£ÄÊµãÊòØÂê¶ÈúÄË¶ÅËß£ÈáäÈÄâ‰∏≠ÊñáÊú¨
                if (this.shouldExplainSelection(message) && this.selectedText) {
                    systemPrompt = `‰Ω†ÊòØ‰∏Ä‰∏™‰∏ì‰∏öÁöÑËß£ÈáäÂä©Êâã„ÄÇËØ∑Áî®ÁÆÄÊ¥ÅÊòìÊáÇÁöÑËØ≠Ë®ÄËß£ÈáäÁî®Êà∑ÈÄâ‰∏≠ÁöÑÊñáÊú¨„ÄÇ

ËæìÂá∫Ê†ºÂºèÔºö
üìñ Ëß£ÈáäÔºö
- Âü∫Êú¨Âê´‰πâÔºö[ÁÆÄÊòéËß£Èáä]
- Âú®Êú¨Êñá‰∏≠Ôºö[ÁªìÂêà‰∏ä‰∏ãÊñáÁöÑÁêÜËß£]
${this.selectedText.match(/[a-zA-Z]/) ? '- ÁøªËØëÔºö[Â¶ÇÊûúÊòØÂ§ñËØ≠]' : ''}

Ê≥®ÊÑèÔºöÁÆÄÊ¥ÅÊòé‰∫ÜÔºåÈÅøÂÖçËøáÂ∫¶Êâ©Â±ï„ÄÇ`;

                    const pageContext = this.extractPageContent();
                    finalMessage = `${systemPrompt}

ÁΩëÈ°µ‰∏ä‰∏ãÊñáÔºö
Ê†áÈ¢òÔºö${pageContext.title}
ÂÜÖÂÆπÁâáÊÆµÔºö${pageContext.content.substring(0, 500)}...

ÈÄâ‰∏≠ÁöÑÊñáÊú¨Ôºö
"${this.selectedText}"

Áî®Êà∑ÈóÆÈ¢òÔºö${message}`;
                    
                    // Ê∏ÖÁ©∫ÈÄâ‰∏≠ÊñáÊú¨
                    this.selectedText = '';
                    this.hideSelectionHint();
                }
                // 2. Ê£ÄÊµãÊòØÂê¶ÈúÄË¶ÅÊêúÁ¥¢ÁΩëÈ°µÂÜÖÂÆπ
                else if (this.shouldSearchPage(message)) {
                    systemPrompt = `‰Ω†ÊòØ‰∏Ä‰∏™Êô∫ËÉΩÊêúÁ¥¢Âä©Êâã„ÄÇËØ∑‰ªéÁΩëÈ°µÂÜÖÂÆπ‰∏≠ÊâæÂà∞Áî®Êà∑ÈúÄË¶ÅÁöÑ‰ø°ÊÅØ„ÄÇ

ËæìÂá∫Ê†ºÂºèÔºö
üîç ÊêúÁ¥¢ÁªìÊûúÔºö

‚úÖ ÊâæÂà∞Áõ∏ÂÖ≥ÂÜÖÂÆπÔºö
"[ÂºïÁî®ÂéüÊñáÁõ∏ÂÖ≥ÊÆµËêΩ]"

üí° Ëß£Á≠îÔºö
[Âü∫‰∫éÊâæÂà∞ÁöÑÂÜÖÂÆπÂõûÁ≠îÁî®Êà∑ÈóÆÈ¢ò]

üìç ‰ΩçÁΩÆÊèêÁ§∫Ôºö
[ÂëäËØâÁî®Êà∑ËøôÈÉ®ÂàÜÂÜÖÂÆπÁöÑÂ§ßËá¥‰ΩçÁΩÆ]

Ê≥®ÊÑèÔºöÂøÖÈ°ªÂºïÁî®ÂéüÊñáÔºåÂ¶ÇÊûúÊ≤°ÊâæÂà∞ÊòéÁ°ÆÂëäÁü•Áî®Êà∑„ÄÇ`;

                    const pageContent = this.extractPageContent();
                    finalMessage = `${systemPrompt}

ÁΩëÈ°µÂÜÖÂÆπÔºö
Ê†áÈ¢òÔºö${pageContent.title}
ÈìæÊé•Ôºö${pageContent.url}

ÂÜÖÂÆπÔºö
${pageContent.content}

Áî®Êà∑ÊêúÁ¥¢Ôºö${message}`;
                }
                // 3. Ê£ÄÊµãÊòØÂê¶ÈúÄË¶ÅÊÄªÁªìÁΩëÈ°µ
                else if (this.shouldSummarizePage(message)) {
                    const pageContent = this.extractPageContent();
                    finalMessage = `ËØ∑ÊÄªÁªì‰ª•‰∏ãÁΩëÈ°µÂÜÖÂÆπÔºö

ÁΩëÈ°µÊ†áÈ¢òÔºö${pageContent.title}
ÁΩëÈ°µÈìæÊé•Ôºö${pageContent.url}

ÁΩëÈ°µÂÜÖÂÆπÔºö
${pageContent.content}

Áî®Êà∑ÈóÆÈ¢òÔºö${message}`;
                }
                
                // Ë∞ÉÁî®ÊµÅÂºèAPI
                const response = await fetch(`${this.config.apiBase}/chat/stream`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        session_id: this.currentSessionId,
                        message: finalMessage,
                        stream: true
                    })
                });
                
                this.removeLoading();
                
                if (!response.ok) {
                    throw new Error('ËØ∑Ê±ÇÂ§±Ë¥•');
                }
                
                // ÂàõÂª∫AIÊ∂àÊÅØÂÆπÂô®
                const messagesContainer = document.getElementById('popupChatMessages');
                const aiMessageDiv = document.createElement('div');
                aiMessageDiv.className = 'popup-chat-message assistant';
                aiMessageDiv.innerHTML = '<div class="popup-chat-message-content"></div>';
                messagesContainer.appendChild(aiMessageDiv);
                
                const contentDiv = aiMessageDiv.querySelector('.popup-chat-message-content');
                
                // ËØªÂèñÊµÅÂºèÂìçÂ∫î
                const reader = response.body.getReader();
                const decoder = new TextDecoder();
                let buffer = '';
                
                while (true) {
                    const { done, value } = await reader.read();
                    if (done) break;
                    
                    buffer += decoder.decode(value, { stream: true });
                    const lines = buffer.split('\n');
                    buffer = lines.pop();
                    
                    for (const line of lines) {
                        if (line.trim()) {
                            try {
                                const data = JSON.parse(line);
                                if (data.type === 'content') {
                                    contentDiv.textContent = data.content;
                                    messagesContainer.scrollTop = messagesContainer.scrollHeight;
                                }
                            } catch (e) {
                                console.error('Ëß£ÊûêÂ§±Ë¥•:', e);
                            }
                        }
                    }
                }
                
            } catch (error) {
                console.error('ÂèëÈÄÅÊ∂àÊÅØÂ§±Ë¥•:', error);
                this.removeLoading();
                this.addMessage('assistant', 'Êä±Ê≠â,Âá∫Áé∞‰∫ÜÈîôËØØ,ËØ∑Á®çÂêéÈáçËØï„ÄÇ');
            } finally {
                sendBtn.disabled = false;
            }
        },

        /**
         * HTMLËΩ¨‰πâ
         */
        escapeHtml: function(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }
    };

    // Êö¥Èú≤Âà∞ÂÖ®Â±Ä
    window.PopupChatKit = PopupChatKit;

})(window);
